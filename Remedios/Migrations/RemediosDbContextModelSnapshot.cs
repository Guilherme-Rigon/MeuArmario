// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Remedios.Data;

namespace Remedios.Migrations
{
    [DbContext(typeof(RemediosDbContext))]
    partial class RemediosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Remedios.Models.Dose", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataUso")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MembroRemedioRemedioId")
                        .HasColumnType("bigint");

                    b.Property<long?>("MembroRemedioUserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("MembroRemedioRemedioId", "MembroRemedioUserId");

                    b.ToTable("Doses");
                });

            modelBuilder.Entity("Remedios.Models.Foto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("MembroId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("foto")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.HasIndex("MembroId");

                    b.ToTable("Fotos");
                });

            modelBuilder.Entity("Remedios.Models.MembroFamilia", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("CPF")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("MembrosFamilia");
                });

            modelBuilder.Entity("Remedios.Models.MembroRemedio", b =>
                {
                    b.Property<long>("RemedioId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ReceitaId")
                        .HasColumnType("bigint");

                    b.HasKey("RemedioId", "UserId");

                    b.HasIndex("ReceitaId");

                    b.HasIndex("UserId");

                    b.ToTable("MembroRemedios");
                });

            modelBuilder.Entity("Remedios.Models.Receita", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Diagnostico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Instrucao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Medico")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("Temporario")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("Remedios.Models.Remedio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<string>("Tarja")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("Validade")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Remedios");
                });

            modelBuilder.Entity("Remedios.Models.Dose", b =>
                {
                    b.HasOne("Remedios.Models.MembroRemedio", "MembroRemedio")
                        .WithMany("Doses")
                        .HasForeignKey("MembroRemedioRemedioId", "MembroRemedioUserId");

                    b.Navigation("MembroRemedio");
                });

            modelBuilder.Entity("Remedios.Models.Foto", b =>
                {
                    b.HasOne("Remedios.Models.MembroFamilia", "Membro")
                        .WithMany("Fotos")
                        .HasForeignKey("MembroId");

                    b.Navigation("Membro");
                });

            modelBuilder.Entity("Remedios.Models.MembroRemedio", b =>
                {
                    b.HasOne("Remedios.Models.Receita", "Receita")
                        .WithMany("UsuarioRemedio")
                        .HasForeignKey("ReceitaId");

                    b.HasOne("Remedios.Models.Remedio", "Remedio")
                        .WithMany("Usuarios")
                        .HasForeignKey("RemedioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Remedios.Models.MembroFamilia", "User")
                        .WithMany("Remedios")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receita");

                    b.Navigation("Remedio");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Remedios.Models.MembroFamilia", b =>
                {
                    b.Navigation("Fotos");

                    b.Navigation("Remedios");
                });

            modelBuilder.Entity("Remedios.Models.MembroRemedio", b =>
                {
                    b.Navigation("Doses");
                });

            modelBuilder.Entity("Remedios.Models.Receita", b =>
                {
                    b.Navigation("UsuarioRemedio");
                });

            modelBuilder.Entity("Remedios.Models.Remedio", b =>
                {
                    b.Navigation("Usuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
